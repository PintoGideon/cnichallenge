[{"/home/gideonpinto/cnichallenge/src/App.tsx":"1","/home/gideonpinto/cnichallenge/src/logged_off/components/Routing.tsx":"2","/home/gideonpinto/cnichallenge/src/shared/PropsRoute.tsx":"3","/home/gideonpinto/cnichallenge/src/logged_off/components/home/Home.tsx":"4","/home/gideonpinto/cnichallenge/src/logged_off/components/Main.tsx":"5","/home/gideonpinto/cnichallenge/src/logged_off/components/navigation/Navbar.tsx":"6","/home/gideonpinto/cnichallenge/src/logged_off/components/authentication/DialogSelector.tsx":"7","/home/gideonpinto/cnichallenge/src/theme.tsx":"8","/home/gideonpinto/cnichallenge/src/logged_off/components/authentication/RegisterDialog.tsx":"9","/home/gideonpinto/cnichallenge/src/shared/VisibilityPasswordTextField.tsx":"10","/home/gideonpinto/cnichallenge/src/shared/DialogTitleWithCloseIcon.tsx":"11","/home/gideonpinto/cnichallenge/src/logged_off/components/authentication/LoginDialog.tsx":"12","/home/gideonpinto/cnichallenge/src/logged_off/components/home/HeadSection.tsx":"13","/home/gideonpinto/cnichallenge/src/GlobalStyles.tsx":"14","/home/gideonpinto/cnichallenge/src/shared/ZoomImage.tsx":"15","/home/gideonpinto/cnichallenge/src/logged_in/components/Main.tsx":"16","/home/gideonpinto/cnichallenge/src/shared/SideDrawer.tsx":"17","/home/gideonpinto/cnichallenge/src/shared/ButtonCircularProgress.tsx":"18","/home/gideonpinto/cnichallenge/src/shared/FormDialog.tsx":"19","/home/gideonpinto/cnichallenge/src/utils/auth-provider.ts":"20","/home/gideonpinto/cnichallenge/src/logged_in/components/dashboard/Dashboard.tsx":"21","/home/gideonpinto/cnichallenge/src/shared/HighlightedInformation.tsx":"22","/home/gideonpinto/cnichallenge/src/logged_in/components/navigation/NavBar.tsx":"23","/home/gideonpinto/cnichallenge/src/shared/ModalBackdrop.tsx":"24","/home/gideonpinto/cnichallenge/src/logged_in/components/Routing.tsx":"25","/home/gideonpinto/cnichallenge/src/logged_in/components/submisstion/PostContent.tsx":"26","/home/gideonpinto/cnichallenge/src/shared/ActionPaper.tsx":"27","/home/gideonpinto/cnichallenge/src/logged_in/components/submisstion/AddPost.tsx":"28","/home/gideonpinto/cnichallenge/src/logged_in/components/submisstion/SubmitPost.tsx":"29","/home/gideonpinto/cnichallenge/src/shared/ConsecutiveSnackbarMessages.tsx":"30","/home/gideonpinto/cnichallenge/src/logged_in/components/submisstion/StatusArea.tsx":"31","/home/gideonpinto/cnichallenge/src/shared/EnhancedTableHead.tsx":"32","/home/gideonpinto/cnichallenge/src/index.tsx":"33","/home/gideonpinto/cnichallenge/src/logged_off/components/InfoSection/InfoCard.tsx":"34","/home/gideonpinto/cnichallenge/src/logged_off/components/footer/Footer.tsx":"35","/home/gideonpinto/cnichallenge/src/logged_off/components/InfoSection/calculateSpacing.ts":"36","/home/gideonpinto/cnichallenge/src/logged_off/components/InfoSection/InfoSection.tsx":"37","/home/gideonpinto/cnichallenge/src/logged_in/components/submisstion/UserDataArea.tsx":"38"},{"size":1285,"mtime":1610728408427,"results":"39","hashOfConfig":"40"},{"size":846,"mtime":1610951133787,"results":"41","hashOfConfig":"40"},{"size":1029,"mtime":1610948034366,"results":"42","hashOfConfig":"40"},{"size":364,"mtime":1610670462260,"results":"43","hashOfConfig":"40"},{"size":3077,"mtime":1610947831124,"results":"44","hashOfConfig":"40"},{"size":4124,"mtime":1610951729656,"results":"45","hashOfConfig":"40"},{"size":1727,"mtime":1610725216423,"results":"46","hashOfConfig":"40"},{"size":2863,"mtime":1610946965475,"results":"47","hashOfConfig":"40"},{"size":6741,"mtime":1610725464822,"results":"48","hashOfConfig":"40"},{"size":1160,"mtime":1610650753907,"results":"49","hashOfConfig":"40"},{"size":1298,"mtime":1610650157336,"results":"50","hashOfConfig":"40"},{"size":4478,"mtime":1610725258512,"results":"51","hashOfConfig":"40"},{"size":5295,"mtime":1610902344962,"results":"52","hashOfConfig":"40"},{"size":3029,"mtime":1610947080973,"results":"53","hashOfConfig":"40"},{"size":3144,"mtime":1610658256336,"results":"54","hashOfConfig":"40"},{"size":3719,"mtime":1610941397301,"results":"55","hashOfConfig":"40"},{"size":1288,"mtime":1610677749018,"results":"56","hashOfConfig":"40"},{"size":799,"mtime":1610651037466,"results":"57","hashOfConfig":"40"},{"size":2000,"mtime":1610649863817,"results":"58","hashOfConfig":"40"},{"size":3003,"mtime":1610935071247,"results":"59","hashOfConfig":"40"},{"size":1546,"mtime":1610945079057,"results":"60","hashOfConfig":"40"},{"size":1042,"mtime":1610651019389,"results":"61","hashOfConfig":"40"},{"size":8194,"mtime":1610736300975,"results":"62","hashOfConfig":"40"},{"size":627,"mtime":1610652390508,"results":"63","hashOfConfig":"40"},{"size":2098,"mtime":1610945173248,"results":"64","hashOfConfig":"40"},{"size":914,"mtime":1610942225166,"results":"65","hashOfConfig":"40"},{"size":1457,"mtime":1610736243843,"results":"66","hashOfConfig":"40"},{"size":4001,"mtime":1610933393482,"results":"67","hashOfConfig":"40"},{"size":4782,"mtime":1610933334399,"results":"68","hashOfConfig":"40"},{"size":2355,"mtime":1610933042027,"results":"69","hashOfConfig":"40"},{"size":1606,"mtime":1610811649558,"results":"70","hashOfConfig":"40"},{"size":2457,"mtime":1610944714654,"results":"71","hashOfConfig":"40"},{"size":199,"mtime":1610637323896,"results":"72","hashOfConfig":"40"},{"size":1768,"mtime":1610946746647,"results":"73","hashOfConfig":"40"},{"size":8298,"mtime":1610902334814,"results":"74","hashOfConfig":"40"},{"size":325,"mtime":1610904141673,"results":"75","hashOfConfig":"40"},{"size":2969,"mtime":1610947313755,"results":"76","hashOfConfig":"40"},{"size":5126,"mtime":1610945020463,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1jbwm7a",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"103"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gideonpinto/cnichallenge/src/App.tsx",[],["161","162"],"/home/gideonpinto/cnichallenge/src/logged_off/components/Routing.tsx",["163"],"/home/gideonpinto/cnichallenge/src/shared/PropsRoute.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_off/components/home/Home.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_off/components/Main.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_off/components/navigation/Navbar.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_off/components/authentication/DialogSelector.tsx",["164"],"import React, { Fragment, useCallback, useState } from \"react\";\nimport RegisterDialog from \"./RegisterDialog\";\nimport LoginDialog from \"./LoginDialog\";\nimport ModalBackdrop from \"../../../shared/ModalBackdrop\";\n\ninterface DialogSelectorProps {\n  dialogOpen: string;\n  openLoginDialog: () => void;\n  onClose: () => void;\n  openRegisterDialog: () => void;\n  register: (form: {\n    username: string;\n    email: string;\n    password: string;\n  }) => void;\n  login: (form: { username: string; password: string }) => void;\n}\n\nfunction DialogSelector(props: DialogSelectorProps) {\n  const { dialogOpen, onClose, register, login } = props;\n  const [loginStatus, setLoginStatus] = useState(\"\");\n  const [registerStatus, setRegisterStatus] = useState(\"\");\n\n  const _onClose = useCallback(() => {\n    setLoginStatus(\"\");\n    setRegisterStatus(\"\");\n    onClose();\n  }, [onClose, setLoginStatus, setRegisterStatus]);\n\n  const printDialog = useCallback(() => {\n    switch (dialogOpen) {\n      case \"register\":\n        return (\n          <RegisterDialog\n            onClose={_onClose}\n            status={registerStatus}\n            setStatus={setRegisterStatus}\n            registerCallback={register}\n          />\n        );\n      case \"login\":\n        return (\n          <LoginDialog\n            onClose={_onClose}\n            status={loginStatus}\n            setStatus={setLoginStatus}\n            loginCallback={login}\n          />\n        );\n\n      default:\n    }\n  }, [\n    dialogOpen,\n    _onClose,\n    loginStatus,\n    registerStatus,\n    setLoginStatus,\n    setRegisterStatus,\n  ]);\n\n  return (\n    <Fragment>\n      {dialogOpen && <ModalBackdrop open />}\n      {printDialog()}\n    </Fragment>\n  );\n}\n\nexport default DialogSelector;\n",["165","166"],"/home/gideonpinto/cnichallenge/src/theme.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_off/components/authentication/RegisterDialog.tsx",[],"/home/gideonpinto/cnichallenge/src/shared/VisibilityPasswordTextField.tsx",[],"/home/gideonpinto/cnichallenge/src/shared/DialogTitleWithCloseIcon.tsx",[],["167","168"],"/home/gideonpinto/cnichallenge/src/logged_off/components/authentication/LoginDialog.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_off/components/home/HeadSection.tsx",[],"/home/gideonpinto/cnichallenge/src/GlobalStyles.tsx",[],"/home/gideonpinto/cnichallenge/src/shared/ZoomImage.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_in/components/Main.tsx",["169","170"],"/home/gideonpinto/cnichallenge/src/shared/SideDrawer.tsx",["171"],"/home/gideonpinto/cnichallenge/src/shared/ButtonCircularProgress.tsx",[],"/home/gideonpinto/cnichallenge/src/shared/FormDialog.tsx",[],"/home/gideonpinto/cnichallenge/src/utils/auth-provider.ts",[],"/home/gideonpinto/cnichallenge/src/logged_in/components/dashboard/Dashboard.tsx",[],["172","173"],"/home/gideonpinto/cnichallenge/src/shared/HighlightedInformation.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_in/components/navigation/NavBar.tsx",["174","175","176","177"],"import React, { Fragment, useRef, useCallback, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Avatar,\n  Drawer,\n  List,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Hidden,\n  Tooltip,\n  Box,\n  isWidthUp,\n  withWidth,\n  createStyles,\n  Theme,\n  withStyles,\n  WithWidth,\n  WithStyles,\n} from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport NavigationDrawer from \"../../../shared/NavigationDrawer\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    appBar: {\n      boxShadow: theme.shadows[6],\n      backgroundColor: theme.palette.common.white,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"100%\",\n        marginLeft: 0,\n      },\n    },\n    appBarToolbar: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n      [theme.breakpoints.up(\"sm\")]: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3),\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        paddingLeft: theme.spacing(4),\n        paddingRight: theme.spacing(4),\n      },\n    },\n    accountAvatar: {\n      backgroundColor: theme.palette.secondary.main,\n      height: 24,\n      width: 24,\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.down(\"xs\")]: {\n        marginLeft: theme.spacing(1.5),\n        marginRight: theme.spacing(1.5),\n      },\n    },\n    drawerPaper: {\n      height: \"100%vh\",\n      whiteSpace: \"nowrap\",\n      border: 0,\n      width: theme.spacing(7),\n      overflowX: \"hidden\",\n      marginTop: theme.spacing(8),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n      backgroundColor: theme.palette.common.black,\n    },\n    smBordered: {\n      [theme.breakpoints.down(\"xs\")]: {\n        borderRadius: \"50% !important\",\n      },\n    },\n    menuLink: {\n      textDecoration: \"none\",\n      color: theme.palette.text.primary,\n    },\n    iconListItem: {\n      width: \"auto\",\n      borderRadius: theme.shape.borderRadius,\n      paddingTop: 11,\n      paddingBottom: 11,\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    textPrimary: {\n      color: theme.palette.primary.main,\n    },\n    mobileItemSelected: {\n      backgroundColor: `${theme.palette.primary.main} !important`,\n    },\n    brandText: {\n      fontFamily: \"'Baloo Bhaijaan', cursive\",\n      fontWeight: 400,\n    },\n    username: {\n      paddingLeft: 0,\n      paddingRight: theme.spacing(2),\n    },\n    justifyCenter: {\n      justifyContent: \"center\",\n    },\n    permanentDrawerListItem: {\n      justifyContent: \"center\",\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  });\n\ninterface NavBarProps extends WithStyles<typeof styles>, WithWidth {\n  selectedTab: string;\n  user: string;\n}\n\nfunction NavBar(props: NavBarProps) {\n  const links = useRef([]);\n  const { classes, selectedTab, width, user } = props;\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\n  const openMobileDrawer = useCallback(() => {\n    setIsMobileOpen(true);\n  }, [setIsMobileOpen]);\n\n  const closeMobileDrawer = useCallback(() => {\n    setIsMobileOpen(false);\n  }, [setIsMobileOpen]);\n\n  const openDrawer = useCallback(() => {\n    setIsSideDrawerOpen(true);\n  }, [setIsSideDrawerOpen]);\n\n  const closeDrawer = useCallback(() => {\n    setIsSideDrawerOpen(false);\n  }, [setIsSideDrawerOpen]);\n  const menuItems = [\n    {\n      link: \"/dashboard\",\n      name: \"Dashboard\",\n      onClick: closeMobileDrawer,\n      icon: {\n        desktop: (\n          <DashboardIcon\n            className={\n              selectedTab === \"Dashboard\" ? classes.textPrimary : \"text-white\"\n            }\n            fontSize=\"small\"\n          />\n        ),\n        mobile: <DashboardIcon className=\"text-white\" />,\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.appBarToolbar}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Hidden smUp>\n              <Box mr={1}>\n                <IconButton\n                  aria-label=\"Open Navigation\"\n                  onClick={openMobileDrawer}\n                  color=\"primary\"\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Box>\n            </Hidden>\n            <Hidden xsDown>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\"\n              >\n                CNI\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"secondary\"\n              >\n                CHALLENGE\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            width=\"100%\"\n          >\n            <ListItem\n              disableGutters\n              className={classNames(classes.iconListItem, classes.smBordered)}\n            >\n              {isWidthUp(\"sm\", width) && (\n                <ListItemText\n                  className={classes.username}\n                  primary={\n                    <Typography color=\"textPrimary\">Hi {user}</Typography>\n                  }\n                />\n              )}\n            </ListItem>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Hidden xsDown>\n        <Drawer //  both drawers can be combined into one for performance\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open={false}\n        >\n          <List>\n            {menuItems.map((element, index) => (\n              <Link\n                to={element.link}\n                className={classes.menuLink}\n                onClick={element.onClick}\n                key={index}\n                ref={(node) => {\n                  //@ts-ignore\n                  links.current[index] = node;\n                }}\n              >\n                <Tooltip\n                  title={element.name}\n                  placement=\"right\"\n                  key={element.name}\n                >\n                  <ListItem\n                    selected={selectedTab === element.name}\n                    button\n                    divider={index !== menuItems.length - 1}\n                    className={classes.permanentDrawerListItem}\n                    onClick={() => {\n                      //@ts-ignore\n                      links.current[index].click();\n                    }}\n                    aria-label={\n                      element.name === \"Logout\"\n                        ? \"Logout\"\n                        : `Go to ${element.name}`\n                    }\n                  >\n                    <ListItemIcon className={classes.justifyCenter}>\n                      {element.icon.desktop}\n                    </ListItemIcon>\n                  </ListItem>\n                </Tooltip>\n              </Link>\n            ))}\n          </List>\n        </Drawer>\n      </Hidden>\n      <NavigationDrawer\n        menuItems={menuItems.map((element) => ({\n          link: element.link,\n          name: element.name,\n          icon: element.icon.mobile,\n          onClick: element.onClick,\n        }))}\n        anchor=\"left\"\n        open={isMobileOpen}\n        selectedItem={selectedTab}\n        onClose={closeMobileDrawer}\n      />\n    </Fragment>\n  );\n}\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(NavBar));\n","/home/gideonpinto/cnichallenge/src/shared/ModalBackdrop.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_in/components/Routing.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_in/components/submisstion/PostContent.tsx",[],"/home/gideonpinto/cnichallenge/src/shared/ActionPaper.tsx",["178"],"import React, { ReactNode } from \"react\";\n\nimport {\n  Paper,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Box,\n  withStyles,\n  createStyles,\n  WithStyles,\n  Theme,\n} from \"@material-ui/core\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    helpPadding: {\n      \"@media (max-width:  400px)\": {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n      },\n    },\n    fullWidth: {\n      width: \"100%\",\n    },\n  });\n\ninterface ActionPaperProps extends WithStyles<typeof styles> {\n  title?: ReactNode | string;\n  content: ReactNode;\n  maxWidth?: string;\n  actions: ReactNode;\n  helpPadding?: boolean;\n  fullWidthActions?: boolean;\n}\n\nfunction ActionPaper(props: ActionPaperProps) {\n  const {\n    //@ts-ignore\n    theme,\n    classes,\n    title,\n    content,\n    maxWidth,\n    actions,\n    helpPadding,\n    fullWidthActions,\n  } = props;\n  return (\n    <Box pt={1}>\n      <Paper style={{ maxWidth: theme.breakpoints.values[maxWidth] }}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n        {content && (\n          <DialogContent\n            classes={helpPadding ? { root: classes.helpPadding } : undefined}\n          >\n            {content}\n          </DialogContent>\n        )}\n        {actions && (\n          <Box pb={2} pr={2}>\n            <DialogActions>{actions}</DialogActions>\n          </Box>\n        )}\n      </Paper>\n    </Box>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(ActionPaper);\n","/home/gideonpinto/cnichallenge/src/logged_in/components/submisstion/AddPost.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_in/components/submisstion/SubmitPost.tsx",[],"/home/gideonpinto/cnichallenge/src/shared/ConsecutiveSnackbarMessages.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_in/components/submisstion/StatusArea.tsx",[],"/home/gideonpinto/cnichallenge/src/shared/EnhancedTableHead.tsx",[],"/home/gideonpinto/cnichallenge/src/index.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_off/components/InfoSection/InfoCard.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_off/components/footer/Footer.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_off/components/InfoSection/calculateSpacing.ts",[],"/home/gideonpinto/cnichallenge/src/logged_off/components/InfoSection/InfoSection.tsx",[],"/home/gideonpinto/cnichallenge/src/logged_in/components/submisstion/UserDataArea.tsx",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":14,"column":36,"nodeType":"185","messageId":"186","endLine":14,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":53,"column":6,"nodeType":"189","endLine":60,"endColumn":4,"suggestions":"190"},{"ruleId":"179","replacedBy":"191"},{"ruleId":"181","replacedBy":"192"},{"ruleId":"179","replacedBy":"193"},{"ruleId":"181","replacedBy":"194"},{"ruleId":"183","severity":1,"message":"195","line":44,"column":29,"nodeType":"185","messageId":"186","endLine":44,"endColumn":49},{"ruleId":"196","severity":1,"message":"197","line":87,"column":67,"nodeType":"198","messageId":"199","endLine":87,"endColumn":69},{"ruleId":"183","severity":1,"message":"200","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":17},{"ruleId":"179","replacedBy":"201"},{"ruleId":"181","replacedBy":"202"},{"ruleId":"183","severity":1,"message":"203","line":7,"column":3,"nodeType":"185","messageId":"186","endLine":7,"endColumn":9},{"ruleId":"183","severity":1,"message":"204","line":136,"column":10,"nodeType":"185","messageId":"186","endLine":136,"endColumn":26},{"ruleId":"183","severity":1,"message":"205","line":145,"column":9,"nodeType":"185","messageId":"186","endLine":145,"endColumn":19},{"ruleId":"183","severity":1,"message":"206","line":149,"column":9,"nodeType":"185","messageId":"186","endLine":149,"endColumn":20},{"ruleId":"183","severity":1,"message":"207","line":47,"column":5,"nodeType":"185","messageId":"186","endLine":47,"endColumn":21},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"@typescript-eslint/no-unused-vars","'selectContainerize' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'login' and 'register'. Either include them or remove the dependency array.","ArrayExpression",["210"],["208"],["209"],["208"],["209"],"'setIsPluginSubmitted' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'PropTypes' is defined but never used.",["208"],["209"],"'Avatar' is defined but never used.","'isSideDrawerOpen' is assigned a value but never used.","'openDrawer' is assigned a value but never used.","'closeDrawer' is assigned a value but never used.","'fullWidthActions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},"Update the dependencies array to be: [dialogOpen, _onClose, registerStatus, register, loginStatus, login]",{"range":"213","text":"214"},[1460,1575],"[dialogOpen, _onClose, registerStatus, register, loginStatus, login]"]